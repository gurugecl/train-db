{"version":3,"sources":["../../routes/profiles.js"],"names":["require","Router","pool","router","get","request","response","next","sql","query","rowCount","rows","json","console","error","id","params","post","body","name","environment","redirect","put","keys","fields","forEach","key","push","field","index","length","delete","module","exports"],"mappings":"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","file":"profiles.js","sourcesContent":["const { Router } = require('express');\r\nconst pool = require('../db/index');\r\n\r\nconst router = Router();\r\n\r\nrouter.get('/', async (request, response, next) => {\r\n    const sql = `\r\n\t\tSELECT *\r\n\t\tFROM profiles\r\n\t\tORDER BY id ASC`;\r\n    try {\r\n        const {rowCount, rows} = await pool.query(sql);\r\n        response.json(rowCount ? rows : []);\r\n    } catch (e) {\r\n        console.error(e);\r\n        next(e);\r\n    }\r\n});\r\n\r\nrouter.get('/:id', async (request, response, next) => {\r\n    const { id } = request.params;\r\n    const sql = `\r\n\t\tSELECT *\r\n\t\tFROM profiles\r\n\t\tWHERE id = $1`;\r\n    try {\r\n        const {rowCount, rows} = await pool.query(sql, id);\r\n        response.json(rowCount ? rows :[]);\r\n    } catch (e) {\r\n        console.error(e);\r\n        next(e);\r\n    }\r\n});\r\n\r\nrouter.post('/', async (request, response, next) => {\r\n    const { name, environment } = request.body;\r\n    const sql =`\r\n\t\tINSERT INTO\r\n\t\tprofiles(name, environment)\r\n\t\tVALUES($1, $2)`;\r\n    try {\r\n        await pool.query(sql, name, environment);\r\n        response.redirect('/profiles');\r\n    } catch (e) {\r\n        console.error(e);\r\n        next(e);\r\n    }\r\n});\r\n\r\nrouter.put('/:id', async (request, response, next) => {\r\n    const { id } = request.params;\r\n    const keys = ['name', 'environment'];\r\n    const fields = [];\r\n\r\n    keys.forEach(key => {\r\n        if (request.body[key]) fields.push(key);\r\n    });\r\n\r\n    fields.forEach(async(field, index) => {\r\n        const sql = `\r\n\t\tUPDATE profiles\r\n\t\tSET ${field}=($1)\r\n\t\tWHERE id=($2)`;\r\n        try {\r\n            await pool.query(sql, request.body[field], id);\r\n            if (index === fields.length - 1) response.redirect('/profiles');\r\n        } catch (e) {\r\n            console.error(e);\r\n            next(e);\r\n        }\r\n    });\r\n});\r\n\r\nrouter.delete('/:id', async (request, response, next) => {\r\n    const { id } = request.params;\r\n    const sql = `\r\n\t\tDELETE FROM\r\n\t\tprofiles\r\n\t\tWHERE id=($1)`;\r\n    try {\r\n        await pool.query(sql, id);\r\n        response.redirect('/profiles');\r\n    } catch (e) {\r\n        console.error(e);\r\n        next(e);\r\n    }\r\n});\r\n\r\nmodule.exports = router;"]}