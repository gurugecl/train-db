{"version":3,"sources":["../../routes/light.js"],"names":["require","Router","pool","router","get","request","response","next","console","log","query","err","res","rows","json","post","body","level","amount","redirect","module","exports"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;eAEmBA,QAAQ,SAAR,C;IAAXC,M,YAAAA,M;;AACR,IAAMC,OAAOF,QAAQ,OAAR,CAAb;;AAEA,IAAMG,SAASF,QAAf;;AAEAE,OAAOC,GAAP,CAAW,GAAX,EAAgB,UAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA6B;AACzCC,YAAQC,GAAR,CAAY,YAAZ;AACAP,SAAKQ,KAAL,CAAW,qCAAX,EAAkD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5DJ,gBAAQC,GAAR,CAAYE,GAAZ;AACA,YAAIA,GAAJ,EAAS,OAAOJ,KAAKI,GAAL,CAAP;;AAETH,gBAAQC,GAAR,CAAYG,IAAIC,IAAhB;AACAP,iBAASQ,IAAT,CAAcF,IAAIC,IAAlB;AACH,KAND;AAOH,CATD;;AAWAV,OAAOY,IAAP,CAAY,GAAZ,EAAiB,UAACV,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA6B;AAAA,wBAChBF,QAAQW,IADQ;AAAA,QAClCC,KADkC,iBAClCA,KADkC;AAAA,QAC3BC,MAD2B,iBAC3BA,MAD2B;;;AAG1ChB,SAAKQ,KAAL,CACI,iDADJ,EAEI,CAACO,KAAD,EAAQC,MAAR,CAFJ,EAGI,UAACP,GAAD,EAAMC,GAAN,EAAc;AACV,YAAID,GAAJ,EAAS,OAAOJ,KAAKI,GAAL,CAAP;;AAETL,iBAASa,QAAT,CAAkB,QAAlB;AACH,KAPL;AASH,CAZD;;AAcAC,OAAOC,OAAP,GAAiBlB,MAAjB","file":"light.js","sourcesContent":["// const { Router } = require('express');\r\n// const pool = require('../db');\r\n//\r\n// const router = Router();\r\n//\r\n// router.get('/', (request, response, next) => {\r\n//     pool.query('SELECT * FROM light ORDER BY id ASC', (err, res) => {\r\n//         if (err) return next(err);\r\n//\r\n//         response.json(res.rows);\r\n//     });\r\n// });\r\n//\r\n// router.get('/:id', (request, response, next) => {\r\n//     const { id } = request.params;\r\n//\r\n//     pool.query('SELECT * FROM light WHERE id = $1', [id], (err, res) => {\r\n//         if (err) return next(err);\r\n//\r\n//         response.json(res.rows);\r\n//     });\r\n// });\r\n//\r\n// router.post('/', (request, response, next) => {\r\n//     const { level, amount } = request.body;\r\n//\r\n//     pool.query(\r\n//         'INSERT INTO light(level, amount) VALUES($1, $2)',\r\n//         [level, amount],\r\n//         (err, res) => {\r\n//             if (err) return next(err);\r\n//\r\n//             response.redirect('/light');\r\n//         }\r\n//     );\r\n// });\r\n//\r\n// router.put('/:id', (request, response, next) => {\r\n//     const { id } = request.params;\r\n//     const keys = ['level', 'amount'];\r\n//     const fields = [];\r\n//\r\n//     keys.forEach(key => {\r\n//         if (request.body[key]) fields.push(key);\r\n//     });\r\n//\r\n//     fields.forEach((field, index) => {\r\n//         pool.query(\r\n//             `UPDATE light SET ${field}=($1) WHERE id=($2)`,\r\n//             [request.body[field], id],\r\n//             (err, res) => {\r\n//                 if (err) return next(err);\r\n//\r\n//                 if (index === fields.length - 1) response.redirect('/light');\r\n//             }\r\n//         )\r\n//     });\r\n// });\r\n//\r\n// router.delete('/:id', (request, response, next) => {\r\n//     const { id } = request.params;\r\n//\r\n//     pool.query('DELETE FROM light WHERE id=($1)', [id], (err, res) => {\r\n//         if (err) return next(err);\r\n//\r\n//         response.redirect('/light');\r\n//     });\r\n// });\r\n//\r\n// module.exports = router;\r\n\r\nconst { Router } = require('express');\r\nconst pool = require('../db');\r\n\r\nconst router = Router();\r\n\r\nrouter.get('/', (request, response, next) => {\r\n    console.log(\"inside get\");\r\n    pool.query('SELECT * FROM light ORDER BY id ASC', (err, res) => {\r\n        console.log(err);\r\n        if (err) return next(err);\r\n\r\n        console.log(res.rows);\r\n        response.json(res.rows);\r\n    });\r\n});\r\n\r\nrouter.post('/', (request, response, next) => {\r\n    const { level, amount } = request.body;\r\n\r\n    pool.query(\r\n        'INSERT INTO light(level, amount) VALUES($1, $2)',\r\n        [level, amount],\r\n        (err, res) => {\r\n            if (err) return next(err);\r\n\r\n            response.redirect('/light');\r\n        }\r\n    )\r\n});\r\n\r\nmodule.exports = router;\r\n\r\n"]}